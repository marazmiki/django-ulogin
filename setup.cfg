[metadata]
name = django-ulogin
version = 1.0.0
description = User social authentication with ulogin.ru service
long_description =
    file:README.rst
author = Mikhail Porokhovnichenko
author_email = marazmiki@gmail.com
url = https://github.com/marazmiki/django-ulogin
download_url = https://github.com/marazmiki/django-ulogin/archive/master.zip
license = MIT
license_file = LICENSE
platforms =
    OS Independent
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Web Environment
    Framework :: Django
    Framework :: Django :: 1.7
    Framework :: Django :: 1.8
    Framework :: Django :: 1.9
    Framework :: Django :: 1.10
    Framework :: Django :: 1.11
    Framework :: Django :: 2.0
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Topic :: Internet :: WWW/HTTP :: Session

[options]
install_requires =
    requests
test_suite = tests.main
tests_require =
    tox
    requests
include_package_data = True
exclude_package_data =
    AUTHORS
    LICESNSE
    docs/*

zip_safe = False

[bdist_wheel]
universal = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; tox settings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[tox:tox]
envlist =
    dj17-py{27,34}
    dj{18,19,110,111}-py{27,34,35,36}
    dj20-py{34,35,36}

[testenv] ;; no tox: prefix needs here!
commands =
    make coverage
whitelist_externals =
    make
    /bin/bash
deps =
    flake8
    coverage
    coveralls
;    dj17:  django>=1.7,<1.8
;    dj18:  django>=1.8,<1.9
;    dj19:  django>=1.9,<1.10
;    dj110: django>=1.10,<1.11
;    dj111: django>=1.11,<2.0
;    dj20:  django>=2.0,<2.1

; django 1.7
[testenv:dj17-py27]
basepython = python2.7
deps =
    django>=1.7,<1.8
    {[testenv]deps}

[testenv:dj17-py34]
basepython = python3.4
deps =
    django>=1.7,<1.8
    {[testenv]deps}

; django 1.8
[testenv:dj18-py27]
basepython = python2.7
deps =
    django>=1.8,<1.9
    {[testenv]deps}

[testenv:dj18-py34]
basepython = python3.4
deps =
    django>=1.8,<1.9
    {[testenv]deps}

[testenv:dj18-py35]
basepython = python3.5
deps =
    django>=1.8,<1.9
    {[testenv]deps}

[testenv:dj18-py36]
basepython = python3.6
deps =
    django>=1.8,<1.9
    {[testenv]deps}

; django 1.9
[testenv:dj19-py27]
basepython = python2.7
deps =
    django>=1.9,<1.10
    {[testenv]deps}

[testenv:dj19-py34]
basepython = python3.4
deps =
    django>=1.9,<1.10
    {[testenv]deps}

[testenv:dj19-py35]
basepython = python3.5
deps =
    django>=1.9,<1.10
    {[testenv]deps}

[testenv:dj19-py36]
basepython = python3.6
deps =
    django>=1.9,<1.10
    {[testenv]deps}

; django 1.10
[testenv:dj110-py27]
basepython = python2.7
deps =
    django>=1.10,<1.11
    {[testenv]deps}

[testenv:dj110-py34]
basepython = python3.4
deps =
    django>=1.10,<1.11
    {[testenv]deps}

[testenv:dj110-py35]
basepython = python3.5
deps =
    django>=1.10,<1.11
    {[testenv]deps}

[testenv:dj110-py36]
basepython = python3.6
deps =
    django>=1.10,<1.11
    {[testenv]deps}

; django 1.11

[testenv:dj111-py27]
basepython = python2.7
deps =
    django>=1.11,<2
    {[testenv]deps}

[testenv:dj111-py34]
basepython = python3.4
deps =
    django>=1.11,<2
    {[testenv]deps}

[testenv:dj111-py35]
basepython = python3.5
deps =
    django>=1.11,<2
    {[testenv]deps}

[testenv:dj111-py36]
basepython = python3.6
deps =
    django>=1.11,<2
    {[testenv]deps}

; django 2.0
[testenv:dj20-py34]
basepython = python3.4
deps =
    django>=2.0,<2.1
    {[testenv]deps}

[testenv:dj20-py35]
basepython = python3.5
deps =
    django>=2.0,<2.1
    {[testenv]deps}

[testenv:dj20-py36]
basepython = python3.6
deps =
    django>=2.0,<2.1
    {[testenv]deps}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; coverage
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[coverage:run]
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    self.fail\(
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
